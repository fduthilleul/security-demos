apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/displayName: s2i java
    tekton.dev/pipelines.minVersion: '0.19'
    tekton.dev/tags: 's2i, java, workspace'
  name: java-jre-distroless
  namespace: pipeline-demo
  labels:
    app.kubernetes.io/version: '0.1'
spec:
  description: >-
    s2i-java task clones a Git repository and builds and pushes a container
    image using S2I and a Java builder image.
  params:
    - default: .
      description: The location of the path to copy the jar from
      name: PATH_CONTEXT
      type: string
    - description: Location of the repo where image has to be pushed
      name: IMAGE
      type: string
    - default: >-
        registry.redhat.io/rhel8/buildah@sha256:ac0b8714cc260c94435cab46fe41b3de0ccbc3d93e38c395fa9d52ac49e521fe
      description: The location of the buildah builder image.
      name: BUILDER_IMAGE
      type: string
    - default: 'false'
      description: Skip pushing the built image
      name: SKIP_PUSH
      type: string
  results:
    - description: Digest of the image just built.
      name: IMAGE_DIGEST
      type: string
  steps:

    - image: registry.access.redhat.com/ubi9/ubi:latest
      name: generate
      resources: {}
      script: >

        echo "FROM gcr.io/distroless/java17-debian12
              USER 1001
              ENV SECRET_VALUE='if you can read this this code is vulnerable'
              COPY $(params.PATH_CONTEXT)/target/*.jar /deployments/
              ENTRYPOINT" > $(workspaces.source.path)/Dockerfile.gen

      workingDir: $(workspaces.source.path)

    - image: $(params.BUILDER_IMAGE)
      name: build-and-push
      resources: {}
      script: >

        buildah bud --storage-driver=vfs --tls-verify=false --layers -f $(workspaces.source.path)/Dockerfile.gen -t $(params.IMAGE) .

        [[ "$(params.SKIP_PUSH)" == "true" ]] && echo "Push skipped" && exit 0

        [[ "$(workspaces.dockerconfig.bound)" == "true" ]] && export DOCKER_CONFIG="$(workspaces.dockerconfig.path)"

        buildah push --storage-driver=vfs --tls-verify=false --digestfile $(workspaces.source.path)/image-digest $(params.IMAGE) docker://$(params.IMAGE)

        cat $(workspaces.source.path)/image-digest | tee /tekton/results/IMAGE_DIGEST

      securityContext:
        capabilities:
          add:
            - SETFCAP
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: $(workspaces.source.path)

  volumes:
    - emptyDir: {}
      name: varlibcontainers
  workspaces:
    - mountPath: /workspace/source
      name: source
    - description: >-
        An optional workspace that allows providing a .docker/config.json file
        for Buildah to access the container registry. The file should be placed
        at the root of the Workspace with name config.json.
      name: dockerconfig
      optional: true
